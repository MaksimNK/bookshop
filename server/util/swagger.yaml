openapi: 3.0.0
info:
  title: Bookshop API
  version: 1.0.0
  description: API for managing books, users, authentication, and related operations.

paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - surname
                - email
                - password
      responses:
        201:
          description: User registered successfully
        400:
          description: Bad request

  /auth/login:
    post:
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        200:
          description: Login successful
        400:
          description: Invalid credentials

  /auth/me:
    get:
      summary: Get logged-in user info
      security:
        - BearerAuth: []
      responses:
        200:
          description: User information
        401:
          description: Unauthorized

  /auth/logout:
    post:
      summary: Log out the user
      security:
        - BearerAuth: []
      responses:
        200:
          description: Logout successful
        400:
          description: Bad request

  /books:
    get:
      summary: Get all books
      parameters:
        - name: category
          in: query
          description: Filter by category
          schema:
            type: string
        - name: publishing
          in: query
          description: Filter by publishing date
          schema:
            type: string
      responses:
        200:
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    author:
                      type: string
    post:
      summary: Add a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author:
                  type: string
                series:
                  type: string
                publishing:
                  type: string
                image:
                  type: string
                isbn:
                  type: string
                ageLimit:
                  type: string
                originalTitle:
                  type: string
                coverType:
                  type: string
                pages:
                  type: integer
                weight:
                  type: string
                thickness:
                  type: string
                format:
                  type: string
                paperMaterial:
                  type: string
                readingTime:
                  type: string
                description:
                  type: string
                category:
                  type: string
                price:
                  type: number
              required:
                - title
                - author
                - price
      responses:
        201:
          description: Book added successfully
        400:
          description: Bad request

  /books/{id}:
    get:
      summary: Get book by ID
      parameters:
        - name: id
          in: path
          required: true
          description: Book ID
          schema:
            type: integer
      responses:
        200:
          description: Book details
        404:
          description: Book not found

    put:
      summary: Update book by ID
      parameters:
        - name: id
          in: path
          required: true
          description: Book ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                author:
                  type: string
                series:
                  type: string
                publishing:
                  type: string
                image:
                  type: string
                isbn:
                  type: string
                ageLimit:
                  type: string
                originalTitle:
                  type: string
                coverType:
                  type: string
                pages:
                  type: integer
                weight:
                  type: string
                thickness:
                  type: string
                format:
                  type: string
                paperMaterial:
                  type: string
                readingTime:
                  type: string
                description:
                  type: string
                category:
                  type: string
                price:
                  type: number
              required:
                - title
                - author
      responses:
        200:
          description: Book updated successfully
        404:
          description: Book not found

    delete:
      summary: Delete book by ID
      parameters:
        - name: id
          in: path
          required: true
          description: Book ID
          schema:
            type: integer
      responses:
        204:
          description: Book deleted successfully
        404:
          description: Book not found

  /users:
    get:
      summary: Get all users
      responses:
        200:
          description: A list of users
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - surname
                - email
                - password
      responses:
        201:
          description: User created successfully
        400:
          description: Bad request

  /users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
      responses:
        200:
          description: User details
        404:
          description: User not found

    put:
      summary: Update user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        200:
          description: User updated successfully
        404:
          description: User not found

    delete:
      summary: Delete user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
      responses:
        204:
          description: User deleted successfully
        404:
          description: User not found

  catalog/categories:
    post:
      summary: Add a new category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                image:
                  type: string
              required:
                - name
      responses:
        201:
          description: Category added successfully
        400:
          description: Bad request

    get:
      summary: Get all categories
      responses:
        200:
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    image:
                      type: string

  catalog/categories/{id}:
    get:
      summary: Get category by ID
      parameters:
        - name: id
          in: path
          required: true
          description: Category ID
          schema:
            type: integer
      responses:
        200:
          description: Category details
        404:
          description: Category not found

  catalog/categories/bulk:
    post:
      summary: Add multiple categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categories:
                  type: array
                  items:
                    type: object
                    properties:
                      title:
                        type: string
  catalog/publishings:
    get:
      summary: Get all publishings
      responses:
        200:
          description: A list of publishings
          content:
            application/json:
              schema:
                type: object
                properties:
                  publishings:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        image:
                          type: string
                        publishing:
                          type: string
      post:
      summary: Add a new publishing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                image:
                  type: string
                publishing:
                  type: string
              required:
                - title
                - image
                - publishing
      responses:
        201:
          description: Publishing added successfully
        400:
          description: Bad request

